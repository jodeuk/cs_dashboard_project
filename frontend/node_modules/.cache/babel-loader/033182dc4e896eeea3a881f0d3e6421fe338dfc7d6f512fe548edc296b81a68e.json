{"ast":null,"code":"const API_BASE = process.env.REACT_APP_API_BASE || \"https://cs-dashboard-project.onrender.com/api\";\n\n// 기본 API 호출 함수\nasync function apiCall(endpoint, params = {}) {\n  const qs = new URLSearchParams(params).toString();\n  const url = `${API_BASE}${endpoint}${qs ? `?${qs}` : ''}`;\n  const response = await fetch(url);\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.detail || `API 호출 실패: ${response.status}`);\n  }\n  return response.json();\n}\n\n// 필터 옵션 조회 (기간 파라미터 필요)\nexport async function fetchFilterOptions(start, end) {\n  return apiCall('/filter-options', {\n    start,\n    end\n  });\n}\n\n// 기간별 문의량 조회\nexport async function fetchPeriodCounts(params) {\n  return apiCall('/period-counts', params);\n}\n\n// 평균 응답 시간 조회\nexport async function fetchAvgTimes(params) {\n  return apiCall('/avg-times', params);\n}\n\n// 고객유형별 CS 문의량 조회\nexport async function fetchCustomerTypeCS(params) {\n  return apiCall('/customer-type-cs', params);\n}\n\n// CSAT 분석 데이터 조회\nexport async function fetchCsatAnalysis(params) {\n  return apiCall('/csat-analysis', params);\n}\n\n// 워드클라우드 이미지 URL 생성\nexport function getWordCloudUrl(params) {\n  const qs = new URLSearchParams(params).toString();\n  return `${API_BASE}/wordcloud?${qs}`;\n}\n\n// 통계 데이터 조회\nexport async function fetchStatistics(start, end) {\n  return apiCall('/statistics', {\n    start,\n    end\n  });\n}\n\n// 샘플 데이터 조회\nexport async function fetchSample(start, end, n = 5) {\n  return apiCall('/sample', {\n    start,\n    end,\n    n\n  });\n}\n\n// API 상태 확인\nexport async function checkApiHealth() {\n  try {\n    const response = await fetch(API_BASE.replace('/api', ''));\n    return response.ok;\n  } catch (error) {\n    return false;\n  }\n}","map":{"version":3,"names":["API_BASE","process","env","REACT_APP_API_BASE","apiCall","endpoint","params","qs","URLSearchParams","toString","url","response","fetch","ok","error","json","Error","detail","status","fetchFilterOptions","start","end","fetchPeriodCounts","fetchAvgTimes","fetchCustomerTypeCS","fetchCsatAnalysis","getWordCloudUrl","fetchStatistics","fetchSample","n","checkApiHealth","replace"],"sources":["C:/Users/2101-00129/cs_database/cs_dashboard_project/frontend/src/api.js"],"sourcesContent":["const API_BASE = process.env.REACT_APP_API_BASE || \"https://cs-dashboard-project.onrender.com/api\";\r\n\r\n// 기본 API 호출 함수\r\nasync function apiCall(endpoint, params = {}) {\r\n  const qs = new URLSearchParams(params).toString();\r\n  const url = `${API_BASE}${endpoint}${qs ? `?${qs}` : ''}`;\r\n\r\n  const response = await fetch(url);\r\n  if (!response.ok) {\r\n    const error = await response.json();\r\n    throw new Error(error.detail || `API 호출 실패: ${response.status}`);\r\n  }\r\n  return response.json();\r\n}\r\n\r\n// 필터 옵션 조회 (기간 파라미터 필요)\r\nexport async function fetchFilterOptions(start, end) {\r\n  return apiCall('/filter-options', { start, end });\r\n}\r\n\r\n// 기간별 문의량 조회\r\nexport async function fetchPeriodCounts(params) {\r\n  return apiCall('/period-counts', params);\r\n}\r\n\r\n// 평균 응답 시간 조회\r\nexport async function fetchAvgTimes(params) {\r\n  return apiCall('/avg-times', params);\r\n}\r\n\r\n// 고객유형별 CS 문의량 조회\r\nexport async function fetchCustomerTypeCS(params) {\r\n  return apiCall('/customer-type-cs', params);\r\n}\r\n\r\n// CSAT 분석 데이터 조회\r\nexport async function fetchCsatAnalysis(params) {\r\n  return apiCall('/csat-analysis', params);\r\n}\r\n\r\n// 워드클라우드 이미지 URL 생성\r\nexport function getWordCloudUrl(params) {\r\n  const qs = new URLSearchParams(params).toString();\r\n  return `${API_BASE}/wordcloud?${qs}`;\r\n}\r\n\r\n// 통계 데이터 조회\r\nexport async function fetchStatistics(start, end) {\r\n  return apiCall('/statistics', { start, end });\r\n}\r\n\r\n// 샘플 데이터 조회\r\nexport async function fetchSample(start, end, n = 5) {\r\n  return apiCall('/sample', { start, end, n });\r\n}\r\n\r\n// API 상태 확인\r\nexport async function checkApiHealth() {\r\n  try {\r\n    const response = await fetch(API_BASE.replace('/api', ''));\r\n    return response.ok;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n} "],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,+CAA+C;;AAElG;AACA,eAAeC,OAAOA,CAACC,QAAQ,EAAEC,MAAM,GAAG,CAAC,CAAC,EAAE;EAC5C,MAAMC,EAAE,GAAG,IAAIC,eAAe,CAACF,MAAM,CAAC,CAACG,QAAQ,CAAC,CAAC;EACjD,MAAMC,GAAG,GAAG,GAAGV,QAAQ,GAAGK,QAAQ,GAAGE,EAAE,GAAG,IAAIA,EAAE,EAAE,GAAG,EAAE,EAAE;EAEzD,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;EACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMC,KAAK,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACnC,MAAM,IAAIC,KAAK,CAACF,KAAK,CAACG,MAAM,IAAI,cAAcN,QAAQ,CAACO,MAAM,EAAE,CAAC;EAClE;EACA,OAAOP,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB;;AAEA;AACA,OAAO,eAAeI,kBAAkBA,CAACC,KAAK,EAAEC,GAAG,EAAE;EACnD,OAAOjB,OAAO,CAAC,iBAAiB,EAAE;IAAEgB,KAAK;IAAEC;EAAI,CAAC,CAAC;AACnD;;AAEA;AACA,OAAO,eAAeC,iBAAiBA,CAAChB,MAAM,EAAE;EAC9C,OAAOF,OAAO,CAAC,gBAAgB,EAAEE,MAAM,CAAC;AAC1C;;AAEA;AACA,OAAO,eAAeiB,aAAaA,CAACjB,MAAM,EAAE;EAC1C,OAAOF,OAAO,CAAC,YAAY,EAAEE,MAAM,CAAC;AACtC;;AAEA;AACA,OAAO,eAAekB,mBAAmBA,CAAClB,MAAM,EAAE;EAChD,OAAOF,OAAO,CAAC,mBAAmB,EAAEE,MAAM,CAAC;AAC7C;;AAEA;AACA,OAAO,eAAemB,iBAAiBA,CAACnB,MAAM,EAAE;EAC9C,OAAOF,OAAO,CAAC,gBAAgB,EAAEE,MAAM,CAAC;AAC1C;;AAEA;AACA,OAAO,SAASoB,eAAeA,CAACpB,MAAM,EAAE;EACtC,MAAMC,EAAE,GAAG,IAAIC,eAAe,CAACF,MAAM,CAAC,CAACG,QAAQ,CAAC,CAAC;EACjD,OAAO,GAAGT,QAAQ,cAAcO,EAAE,EAAE;AACtC;;AAEA;AACA,OAAO,eAAeoB,eAAeA,CAACP,KAAK,EAAEC,GAAG,EAAE;EAChD,OAAOjB,OAAO,CAAC,aAAa,EAAE;IAAEgB,KAAK;IAAEC;EAAI,CAAC,CAAC;AAC/C;;AAEA;AACA,OAAO,eAAeO,WAAWA,CAACR,KAAK,EAAEC,GAAG,EAAEQ,CAAC,GAAG,CAAC,EAAE;EACnD,OAAOzB,OAAO,CAAC,SAAS,EAAE;IAAEgB,KAAK;IAAEC,GAAG;IAAEQ;EAAE,CAAC,CAAC;AAC9C;;AAEA;AACA,OAAO,eAAeC,cAAcA,CAAA,EAAG;EACrC,IAAI;IACF,MAAMnB,QAAQ,GAAG,MAAMC,KAAK,CAACZ,QAAQ,CAAC+B,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IAC1D,OAAOpB,QAAQ,CAACE,EAAE;EACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAO,KAAK;EACd;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}